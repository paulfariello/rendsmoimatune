@charset 'utf-8';

$rmmt-blue: #5494af;
$rmmt-red: #c66653;
$rmmt-white: #ffffff;
$font-family-base: 'Roboto';

// Set bulma settings
$family-sans-serif: $font-family-base;
$primary: $rmmt-blue;
$link: $rmmt-blue;

// Set font-awesome settings
$fa-font-path: "webfonts";

@import "font-awesome/scss/fontawesome";
@import "font-awesome/scss/solid.scss";
@import "bulma/bulma";

@font-face {
  font-family: alfphabet;
  src: url(fonts/Alfphabet-IV.ttf);
  font-display: swap;
}

@font-face {
  font-family: Roboto;
  src: url(fonts/Roboto-Regular.ttf);
  font-display: swap;
}

.container {
  padding-left: $tile-spacing;
  padding-right: $tile-spacing;
  padding-top: $tile-spacing;
}

.navbar-brand {
  .navbar-item {
    font-family: alfphabet;
    font-size: 1rem;
    margin: 0;
    color: $rmmt-white;
    text-transform: uppercase;
    small {
      color: $rmmt-red;
    }
  }
}

.title {
  margin-left: 0.5rem;
  margin-top: 1rem;
  color: $rmmt-blue;
  a {
    color: $rmmt-blue;
  }
}

.subtitle {
  color: $rmmt-blue;
  a {
    color: $rmmt-blue;
  }
}

.breadcrumb {
  margin-top: 1rem;
  margin-left: 0.5rem;
}

.progress-wrapper {
  position: relative;

  .progress-value {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    font-size: calc($size-normal / 1.5);
    line-height: $size-normal;
    font-weight: bold;
  }

  .progress {
    margin: 0;
  }

  .progress.is-small+.progress-value {
    font-size: calc($size-small / 1.5);
    line-height: $size-small;
  }

  .progress.is-medium+.progress-value {
    font-size: calc($size-medium / 1.5);
    line-height: $size-medium;
  }

  .progress.is-large+.progress-value {
    font-size: calc($size-large / 1.5);
    line-height: $size-large;
  }

  .progress.is-revert {
    transform: scaleX(-1);
  }
}

.cover {
  width: 100%;
  margin: 0;
  padding: 10em 0;
  background-size: auto;
  background-size: cover;
  color: #fff;

  @include mobile {
    background: url(img/background-mobile.webp) no-repeat 50% 0 fixed;
  }

  @include tablet-only {
    background: url(img/background-tablet.webp) no-repeat 50% 0 fixed;
  }

  @include desktop {
    background: url(img/background-large.webp) no-repeat 50% 0 fixed;
  }

  section {
    background: rgba(27,27,27,.75) none repeat scroll 0 0;
  }

  h3 {
    color: $rmmt-white;
  }
}

.loading {
  @include loader;
  margin: auto;
  border: 2px solid $rmmt-blue;
  border-radius: $radius-rounded;
  border-right-color: transparent;
  border-top-color: transparent;
}

.loading-overlay {
  @include overlay(0em);
  opacity: 0.9;
  background: $rmmt-white;
  display: flex;
  align-content: center;
  align-items: center;
}

// Checkbox loosely based on https://codepen.io/LucaCorigliano/pen/xjbOqB
label.is-checkbox {
  background: $link;
  &.is-primary {
    background: $primary;
  }
  &.is-info {
    background: $info;

  }
  &.is-danger {
    background: $danger;
  }
  &.is-warning {
    background: $warning;
    color: $text;
    .checkmark:before {
      background: rgba($light, 0.8);
    }
  }
  &.is-success {
    background: $success;
  }
  &.is-light {
    background-color: $light;
    color: $dark;
  }
  &.is-static {
    background-color: $button-static-background-color;
    border-color: $button-static-border-color;
    color: $button-static-color;
    box-shadow: none;
    pointer-events: none;
    .checkmark:before {
      background: rgba($button-static-color,0.3);
    }
  }
  border: $button-border-width solid transparent;
  color: $white;
  text-align: center;
  white-space: nowrap;
  display: inline-flex;
  justify-content:center;
  padding: $button-padding-vertical $button-padding-horizontal;
  border-radius: $radius-small;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;

  .checkmark {
    color: transparent;
    position: relative;
    i {
      z-index: 1;

    }
    &:before {
      content: '';
      position: absolute;
      right: 0;
      left: 0;
      top: 0;
      bottom: 0;
      z-index: 0;
      border-radius: $radius-small;
      background: rgba($dark, 0.3);
      border: 1px solid rgba($dark, 0.2);
    }
  }
  input[type="checkbox"] {
    position: absolute;
    visibility: hidden;
    cursor: pointer;
    &:checked ~ .checkmark {
      color: inherit;

    }
  }

  &.is-rounded {
    border-radius: 9999px;
    .checkmark:before {
      border-radius: 9999px;
    }
  }

  &:hover {
    box-shadow: inset 0px 0px 9999px rgba(black, 0.05);
  }
  &:active {
    box-shadow: inset 0px 0px 9999px rgba(black, 0.1);
  }
  &.is-small {
    @include button-small;
  }
  &.is-medium {
    @include button-medium;
  }
  &.is-large {
    @include button-large;
  }
  .icon {
    &, &.is-small, &.is-medium, &.is-large {
      height: 1.5em;
      width: 1.5em;
      margin-left: -0.35em;
      margin-right: 0.35em;
    }


    &:first-child:not(:last-child) {
      margin-right: 0.1875em;
      margin-left:calc(-01.375em - #{$button-border-width});
    }
    &:last-child:not(:first-child) {
      margin-left: 0.1875em;

      margin-right:calc(-0.375em - #{$button-border-width});
    }
    &:first-child:last-child {
      margin-left:calc(-0.575em - #{$button-border-width});
    }
  }
}

// Fix bulma icon on title
.title {
  @each $size in $sizes {
    $i: index($sizes, $size);
    &.is-#{$i} {
      .icon {
        line-height: inherit;
        height: $size;
        width: $size;
        &:not(:last-child) {
          margin-right: 0.5em;
        }
      }
    }
  }
}

.subtitle {
  @each $size in $sizes {
    $i: index($sizes, $size);
    &.is-#{$i} {
      .icon {
        line-height: inherit;
        height: $size;
        width: $size;
        &:not(:last-child) {
          margin-right: 0.5em;
        }
      }
    }
  }
}
